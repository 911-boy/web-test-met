// –í–µ—Å—å –∫–æ–¥ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ DOMContentLoaded –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –ú–µ–Ω—é-–±—É—Ä–≥–µ—Ä
  document.querySelector('.menu-toggle').addEventListener('click', () => {
      document.querySelector('.menu').classList.toggle('active');
  });

  // –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
  document.getElementById('form').addEventListener('submit', (e) => {
      e.preventDefault(); // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
      
      const formData = new FormData(e.target);
      const data = Object.fromEntries(formData.entries());
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
      const phonePattern = /^\+7\d{10}$/;
      if (!phonePattern.test(data.phone)) {
          alert('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!');
          return;
      }

      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      console.log('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', data);
      alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.');
  });

  // –°–ª–∞–π–¥–µ—Ä
  let currentIndex = 0;
  const images = Array.from(document.querySelectorAll('.grid-container img'));

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  document.querySelectorAll('.grid-container img').forEach((img, index) => {
      img.addEventListener('click', () => {
          currentIndex = index;
          updateModalImage();
          document.getElementById('modal').style.display = 'block';
      });
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ –∫—Ä–µ—Å—Ç–∏–∫
  document.querySelector('.modal-close').addEventListener('click', () => {
      document.getElementById('modal').style.display = 'none';
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  document.getElementById('modal').addEventListener('click', (e) => {
      if (e.target === document.getElementById('modal')) {
          document.getElementById('modal').style.display = 'none';
      }
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –Ω–∞ Escape
  document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
          document.getElementById('modal').style.display = 'none';
      }
  });

  // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å–ª–∞–π–¥–µ—Ä–∞
  document.querySelector('.prev').addEventListener('click', (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    currentIndex = (currentIndex - 1 + images.length) % images.length;
    updateModalImage();
  });

  document.querySelector('.next').addEventListener('click', (e) => {
    e.stopPropagation(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    currentIndex = (currentIndex + 1) % images.length;
    updateModalImage();
  });

  function updateModalImage() {
    const modalImg = document.getElementById('modalImage');
    modalImg.src = images[currentIndex].src;
    modalImg.alt = `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${currentIndex + 1} –∏–∑ ${images.length}`;
  }

  // —Ç—ë–º–Ω–∞—è —Ç–µ–º–∞ 
  const themeToggle = document.getElementById('theme-toggle');
  const savedTheme = localStorage.getItem('theme') || 'light';

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
  function updateThemeIcon(theme) {
    themeToggle.innerHTML = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã
  document.documentElement.setAttribute('data-theme', savedTheme);
  updateThemeIcon(savedTheme);

  themeToggle.addEventListener('click', () => {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateThemeIcon(newTheme);
  });

  // –û—Ç–∑—ã–≤—ã
  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  let comments = JSON.parse(localStorage.getItem('comments') || '[]');

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
  function generateId() {
    return Date.now().toString() + Math.random().toString(36).substr(2, 9);
  }

  function renderComments() {
    const container = document.getElementById('comments-container');
    
    // –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (comments.length === 0) {
      container.innerHTML = '<p class="no-comments">–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>';
      return;
    }
    
    // –°–æ–∑–¥–∞–µ–º HTML –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    let html = '';
    
    comments.forEach(comment => {
      html += `
        <div class="comment-item" data-id="${comment.id || generateId()}">
          <div class="comment-header">
            <h4>${comment.name}</h4>
            <button class="reply-btn" data-id="${comment.id || generateId()}">–û—Ç–≤–µ—Ç–∏—Ç—å</button>
          </div>
          <p>${comment.text}</p>
          <small>${new Date(comment.date).toLocaleString()}</small>
          <div class="replies-container">
            ${renderReplies(comment.replies || [])}
          </div>
        </div>
      `;
    });
    
    container.innerHTML = html;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –æ—Ç–≤–µ—Ç–∞
    document.querySelectorAll('.reply-btn').forEach(button => {
      button.addEventListener('click', handleReplyButtonClick);
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–æ–≤
  function renderReplies(replies) {
    if (!replies || replies.length === 0) return '';
    
    let html = '';
    
    replies.forEach(reply => {
      html += `
        <div class="comment-item reply" data-id="${reply.id}">
          <div class="comment-header">
            <h4>${reply.name}</h4>
          </div>
          <p>${reply.text}</p>
          <small>${new Date(reply.date).toLocaleString()}</small>
        </div>
      `;
    });
    
    return html;
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å"
  function handleReplyButtonClick(e) {
    const commentId = e.target.dataset.id;
    const commentItem = e.target.closest('.comment-item');
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–æ—Ä–º—ã –æ—Ç–≤–µ—Ç–∞
    document.querySelectorAll('.reply-form').forEach(form => form.remove());
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É –æ—Ç–≤–µ—Ç–∞
    const replyForm = document.createElement('form');
    replyForm.className = 'reply-form';
    replyForm.innerHTML = `
      <input type="text" class="reply-name" placeholder="–í–∞—à–µ –∏–º—è" required>
      <textarea class="reply-text" placeholder="–í–∞—à –æ—Ç–≤–µ—Ç" required></textarea>
      <div class="reply-buttons">
        <button type="submit" class="cta-button">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        <button type="button" class="cancel-reply">–û—Ç–º–µ–Ω–∞</button>
      </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    replyForm.addEventListener('submit', (e) => {
      e.preventDefault();
      handleReplySubmit(e, commentId);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
    replyForm.querySelector('.cancel-reply').addEventListener('click', () => {
      replyForm.remove();
    });
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –ø–æ—Å–ª–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    const repliesContainer = commentItem.querySelector('.replies-container');
    repliesContainer.prepend(replyForm);
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
  function handleReplySubmit(e, parentId) {
    const form = e.target;
    const nameInput = form.querySelector('.reply-name');
    const textInput = form.querySelector('.reply-text');
    
    const newReply = {
      id: generateId(),
      parentId: parentId,
      name: nameInput.value,
      text: textInput.value,
      date: new Date().toISOString()
    };
    
    // –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    for (let i = 0; i < comments.length; i++) {
      if (comments[i].id === parentId) {
        if (!comments[i].replies) comments[i].replies = [];
        comments[i].replies.push(newReply);
        break;
      }
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    localStorage.setItem('comments', JSON.stringify(comments));
    renderComments();
  }

  // –§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
  console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤');
  const commentForm = document.getElementById('comment-form');
  const submitButton = document.getElementById('comment-submit');
  console.log('–§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:', commentForm);
  console.log('–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', submitButton);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
  if (submitButton) {
    submitButton.addEventListener('click', function(e) {
      console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏!');
      e.preventDefault();
      
      const nameInput = document.getElementById('comment-name');
      const textInput = document.getElementById('comment-text');
      
      if (!nameInput.value || !textInput.value) {
        console.error('–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!');
        return;
      }
      
      console.log('–ò–º—è:', nameInput.value);
      console.log('–¢–µ–∫—Å—Ç:', textInput.value);
      
      const comment = {
        id: generateId(),
        name: nameInput.value,
        text: textInput.value,
        date: new Date().toISOString(),
        replies: []
      };
      
      console.log('–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:', comment);
      comments.push(comment);
      localStorage.setItem('comments', JSON.stringify(comments));
      renderComments();
      
      // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
      nameInput.value = '';
      textInput.value = '';
    });
  } else {
    console.error('–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  }
  
  // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã
  if (commentForm) {
    commentForm.addEventListener('submit', function(e) {
      console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
      e.preventDefault();
      
      const nameInput = document.getElementById('comment-name');
      const textInput = document.getElementById('comment-text');
      console.log('–ò–º—è —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É:', nameInput ? nameInput.value : '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      console.log('–¢–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É:', textInput ? textInput.value : '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      
      const comment = {
        id: generateId(),
        name: nameInput.value,
        text: textInput.value,
        date: new Date().toISOString(),
        replies: []
      };
      
      console.log('–ù–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É:', comment);
      comments.push(comment);
      localStorage.setItem('comments', JSON.stringify(comments));
      renderComments();
      
      e.target.reset();
    });
  } else {
    console.error('–§–æ—Ä–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  }
  
  // –ü–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  renderComments();
});